1。kafka-connector俩种运行模式
    standalone mode   单例模式
        一旦挂了。就停止了
    distributed mode  分布式模式（多例）
        可靠性好。后台运行
         可启动多个task 增加速率
         当一个worker挂了其他的worker还可以执行

2。converter（转化器）
    1。text
    2。json      JSONConverter
    3。avro   实现类。AvroConverter类实现转化


3。kafka  offset
    kafka获取资源的偏移量保证kafkaconnector重启是继续往下读，避免冲头开始
    standalone模式下 source offset 存放在一个本地文件
    distribute 模式下 source offset 存放在 kafka topic中

4。启动kafkaconnector注意事项
    启动前需要将connector包放入CLASSPATH上，不然会找不到类

5。启动 connect-distributed服务的配置文件 connect-avro-distributed.properties
    ./bin/connect-distributed ./config/connect-distributed.properties(服务启动后也可以加载写好的connector)
    bootstrap.servers
    key.converter
    value.converter
    key.converter=io.confluent.connect.avro.AvroConverter
   key.converter.schema.registry.url=http://localhost:8081
   value.converter=io.confluent.connect.avro.AvroConverter
   value.converter.schema.registry.url=http://localhost:8081






